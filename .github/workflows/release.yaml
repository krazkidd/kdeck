name: Debian Bookworm Release

on:
  push:
    # this won't work as the build requires a tag with a version number
    # branches:
    #   - main
    tags:
      - "v*.*.*"

  workflow_dispatch:
    # allows manual execution of the workflow

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # NOTE: Our .dockerignore doesn't copy git repo metadata,
      #       so vcpkg will be unable to install dependencies
      #       inside the container.

      - name: Install vcpkg dependencies
        run: |
          cd "${{ github.workspace }}/vendor/microsoft/vcpkg" \
          && ./bootstrap-vcpkg.sh \
          && ./vcpkg install

      - name: Build Docker image
        run: docker build -t kdeck-build .

      # NOTE: We use a bind-mount instead of a volume for the build dir
      #       because the runner user will not have permission to access
      #       an (automatically created) anonymous volume.

      - name: Run build in Docker container
        run: |
          docker run
            -v "${{ github.workspace }}/build:/src/build"
            -v "${{ github.workspace }}/vendor:/src/vendor"
            kdeck-build

      - name: Record hash
        run: echo ${{ github.sha }} > release.txt

      - name: Create tarball
        run: |
          tar -czvf "kdeck-Linux64-${{ github.ref_name }}.tar.gz" \
            --directory="${{ github.workspace }}" \
              release.txt \
              LICENSE.md \
            --directory="${{ github.workspace }}/build/bin/Linux64/Release" \
              kdeck

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          fail_on_unmatched_files: true
          files: |
            kdeck-Linux64-${{ github.ref_name }}.tar.gz
